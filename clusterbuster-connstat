#!/bin/bash

declare jq_cmd
read -r -d '' jq_cmd <<\EOF
[foreach .items[] as $item
 ([[],[]];0;
 (if ($item.kind == "Pod") then
   ([foreach $item.spec.containers[] as $container ([[],[]];0; [$item.metadata.namespace, $item.metadata.name, $container.name, [foreach $item.status.containerStatuses[] as $status ([[],[]]; 0; if ($container.name == $status.name) then $status.state | keys[0] else null end)]] | flatten | map (select (. != null)) | join(" "))])
 else null end))] | flatten | map (select (. != null))[]
EOF

declare -i parallel=1
declare -i curjobs=0
declare basename=clusterbuster

declare OC
OC=$(type -p oc)
OC=${OC:-$(type -p kubectl)}	# kubectl might not work, though...

while getopts ':p:B:' opt ; do
    case "$opt" in
	B) basename=$OPTARG ;;
	p) parallel=$OPTARG ;;
	*) ;;
    esac
done

(( parallel <= 0 )) && parallel=1

trap 'wait; exit' INT EXIT

function retrieve_pod_stats() {
    local ns=$1
    local pod=$2
    local container=$3
    local status=$4
    local -i connection_failures=0
    local -i connection_refused=0
    local -i blocks=0
    local statline=''
    case "$status" in
	running|completed)
	    # This is actually faster than reading lines if there's a lot of data.
	    local data="$(oc logs -n "$ns" "$pod" -c "$container")"
	    connection_refused=$(grep 'Connection refused' <<< "$data" | wc -l)
	    connection_failures=$(grep 'Could not connect' <<< "$data" | wc -l)
	    blocks=$(grep 'Read/Write' <<< "$data" | wc -l)
	    statline=$(grep 'STATS' <<< "$data")
	    connection_failures=$((connection_failures+connection_refused))
	    ;;
	'')
	    return
	    ;;
	*)
	    ;;
    esac
    echo "-n $ns $pod -c $container $status $connection_failures $connection_refused $blocks $statline"
}

while read -r ns pod container status ; do
    while (( curjobs >= parallel )) ; do
	wait -n
	curjobs=$((curjobs - 1))
    done
    if (( parallel > 1 )) ; then
	retrieve_pod_stats "$ns" "$pod" "$container" "$status"&
	curjobs=$((curjobs + 1))
    else
	retrieve_pod_stats "$ns" "$pod" "$container" "$status"
    fi
done <<< "$(oc get pods -ojson -l "${basename}-client" -A | jq -r "$jq_cmd")"
