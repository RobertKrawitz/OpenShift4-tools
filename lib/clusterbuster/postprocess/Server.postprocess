#!/usr/bin/env python3

import json
import sys

jdata = json.load(sys.stdin)

if 'Results' in jdata:
    rows = jdata['Results']
    answer = {}
    answer['mode'] = 'clientserver'
    answer['rows'] = []
    total_max_round_trip_time = 0
    round_trip_time_accumulator = 0
    total_data_xfer = 0
    total_iterations = 0
    total_et = 0.0
    first_start = None
    last_start = None
    first_end = None
    last_end = None
    for row in rows:
        rowhash = {}
        rowhash['namespace'] = row['namespace']
        rowhash['pod'] = row['pod']
        rowhash['container'] = row['container']
        rowhash['run_start'] = row['data_start_time_offset_from_base']
        rowhash['runtime'] = row['data_elapsed_time']
        rowhash['run_end'] = row['data_end_time_offset_from_base']
        rowhash['mean_round_trip_time'] = row['mean_latency_sec']
        rowhash['max_round_trip_time'] = row['max_latency_sec']
        rowhash['iterations'] = row['passes']
        rowhash['data_xfer'] = row['data_sent_bytes']
        rowhash['data_rate'] = round(rowhash['data_xfer'] / rowhash['runtime'])
        if first_start is None or rowhash['run_start'] < first_start:
            first_start = rowhash['run_start']
        if first_end is None or rowhash['run_end'] < first_end:
            first_end = rowhash['run_end']
        if last_start is None or rowhash['run_start'] > last_start:
            last_start = rowhash['run_start']
        if last_end is None or rowhash['run_end'] > last_end:
            last_end = rowhash['run_end']
        if rowhash['max_round_trip_time'] > total_max_round_trip_time:
            total_max_round_trip_time = rowhash['max_round_trip_time']
        total_data_xfer += rowhash['data_xfer']
        total_iterations += rowhash['iterations']
        total_et += rowhash['runtime']
        round_trip_time_accumulator += rowhash['mean_round_trip_time']
        answer['rows'].append(rowhash)

    summary = {}
    answer['summary'] = summary
    summary['first_run_start'] = first_start
    summary['first_run_end'] = first_end
    summary['last_run_start'] = last_start
    summary['last_run_end'] = last_end
    summary['total_iterations'] = total_iterations
    summary['elapsed_time_average'] = round(total_et / len(rows), 3)
    summary['elapsed_time_net'] = round(last_end - first_start, 3)
    summary['overlap_error'] = round((((last_start - first_start) +
                                       (last_end - first_end)) / 2) /
                                     (total_et / len(rows)), 5)
    summary['total_iterations'] = total_iterations
    summary['max_round_trip_time_msec'] = round(total_max_round_trip_time * 1000, 6)
    summary['total_data_xfer_bytes'] = total_data_xfer
    summary['average_data_rate_bytes_sec'] = round(total_data_xfer / (last_end - first_start), 0)
    summary['average_round_trip_time_msec'] = round(1000 * round_trip_time_accumulator / len(rows), 3)
    summary['total_clients'] = len(rows)
    print(json.dumps(answer))
