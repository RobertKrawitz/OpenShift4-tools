#!/usr/bin/env python3

# Copyright 2022 Robert Krawitz/Red Hat
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import sys
import argparse
from lib.clusterbuster.reporting.reporter.ClusterBusterReporter import ClusterBusterReporter, ClusterBusterReporterException
import traceback
import os

print("""
ClusterBuster and associated tools in RobertKrawitz/OpenShift4-tools have
been deprecated and will be removed from that repo on or after
October 1, 2025.  It is now found in redhat-performance/clusterbuster.
Please update your repo accordingly.
""", file=sys.stderr)

if 'CB_LIBPATH' in os.environ:
    sys.path = [element for element in os.environ['CB_LIBPATH'].split(':')] + sys.path
parser = argparse.ArgumentParser(description='Generate ClusterBuster report')
report_formats = ClusterBusterReporter.list_report_formats()

parser.add_argument('-o', '--format', '--output_format', '--output-format', '--output', '--report-format',
                    '--report_format',
                    default='summary', metavar='format', type=str,
                    choices=report_formats, help=f'Report format: one of {", ".join(report_formats)}')
parser.add_argument('-q', '--quiet', action='store_true', help='Do not actually print report')
parser.add_argument('--list_formats', '--list-formats', action='store_true',
                    help='List available report formats')
parser.add_argument("files", metavar='file', type=str, nargs='*', help='Files to process')

args, extras = parser.parse_known_args()
if args.list_formats:
    print('\n'.join(sorted(report_formats)))
    sys.exit(0)

if args.quiet:
    args.format = 'quiet'

try:
    status = ClusterBusterReporter.print_report(args.files, report_format=args.format, extras=extras)
except (KeyboardInterrupt, BrokenPipeError):
    sys.exit(1)
except ClusterBusterReporterException as exc:
    print(f"Generating report failed: {exc}")
    sys.exit(1)
except Exception:
    print(f"Decoding JSON failed: {traceback.format_exc()}", file=sys.stderr)
    sys.exit(1)
sys.exit(0 if status else 1)
